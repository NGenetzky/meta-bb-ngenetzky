image: crops/yocto:ubuntu-18.04-base

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"' # Control when both branch pipelines and tag pipelines run.
      when: always
    # - if: $CI_COMMIT_TAG
    #   when: never
    # - if: $CI_COMMIT_BRANCH
    #   when: never
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
      when: always
    - when: always # Default to always running.

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

.bitbake_simple: &bitbake_simple_template
  image: crops/yocto:ubuntu-18.04-base
  stage: build
  before_script:
    - ./scripts/setup.sh
  script:
    - ci/r0-simple.sh
  cache:
    key: "gitlab_build"
    paths:
      - "build/tmp/cache/" # PERSISTENT_DIR
      - "build/tmp/downloads/" # DL_DIR
      # - "build/tmp/sstate-cache/" # TODO: Not used yet.
  artifacts:
    paths:
      - build/tmp/deploy/ # DEPLOY_DIR
      - build/bitbake-cookerdaemon.log

  rules: # https://docs.gitlab.com/ee/ci/yaml/README.html#rules
    # First priority handling direct requests for job
    - if: '$CI_PIPELINE_SOURCE == "web" && $ARG_JOB_NAME == $CI_JOB_NAME'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "trigger" && $ARG_JOB_NAME == $CI_JOB_NAME'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "schedule"  && $ARG_JOB_NAME == $CI_JOB_NAME'
      when: always

    # If 'ARG_JOB_NAME' is set then avoid adding any other jobs to pipeline.
    - if: '$ARG_JOB_NAME'
      when: never

    # Rather than defaulting to 'never' we will use 'manual' so that it's
    # eaiser for user to trigger these specific builds
    - when: manual # This is always a manual build.

simple-r0:
  extends: .bitbake_simple
  script:
    - ci/r0-simple.sh

simple-r1:
  extends: .bitbake_simple
  script:
    - ci/r1-simple.sh

r1-test-minimal:
  extends: .bitbake_simple
  script:
    - ci/r1-test-minimal.sh

.kas_simple: &kas_simple_template
  image: kasproject/kas:2.1.1
  stage: build
  script:
    - kas build 'kas/r1-bb-examples.yml'
  variables:
    # We will reuse the git repos created by the git fetcher for kas.
    KAS_REPO_REF_DIR: "${CI_PROJECT_DIR}/build/tmp/downloads/git/"
  cache:
    key: "kas_simple"
    paths:
      - "build/tmp/cache/" # PERSISTENT_DIR
      - "build/tmp/downloads/" # DL_DIR
      # - "build/tmp/sstate-cache/" # TODO: Not used yet.
  artifacts:
    paths:
      - build/tmp/deploy/ # DEPLOY_DIR
      - build/bitbake-cookerdaemon.log

  rules: # https://docs.gitlab.com/ee/ci/yaml/README.html#rules
    # First priority handling direct requests for job
    - if: '$CI_PIPELINE_SOURCE == "web" && $ARG_JOB_NAME == $CI_JOB_NAME'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "trigger" && $ARG_JOB_NAME == $CI_JOB_NAME'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "schedule"  && $ARG_JOB_NAME == $CI_JOB_NAME'
      when: always

    # If 'ARG_JOB_NAME' is set then avoid adding any other jobs to pipeline.
    - if: '$ARG_JOB_NAME'
      when: never

    # Rather than defaulting to 'never' we will use 'manual' so that it's
    # eaiser for user to trigger these specific builds
    - when: manual # This is always a manual build.

r0-bb-examples:
  extends: .kas_simple
  script:
    - kas build 'kas/r0-base-only.yml'

r1-bb-examples:
  extends: .kas_simple
  script:
    - kas build 'kas/r1-bb-examples.yml'

r2-bitbake-examples:
  extends: .kas_simple
  script:
    - kas build 'kas/r2-bitbake-examples.yml'

r2-docker-build:
  extends: .kas_simple
  script:
    - kas build 'kas/r2-docker-build-examples.yml'

r0-bb-base:
  extends: .kas_simple
  script:
    - kas build 'kas/r0-git-base-only.yml'

r1-git-bb-fetch:
  extends: .kas_simple
  script:
    - kas build 'kas/r1-git-bb-fetch.yml'

r1-git-bb-build-shell:
  extends: .kas_simple
  script:
    - kas build 'kas/r1-git-bb-build-shell.yml'

r2-venv:
  extends: .kas_simple
  script:
    - kas build 'kas/r2-venv.yml'
